{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NewNoteForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddNewNoteMutation } from \"./notesApiSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewNoteForm = _ref => {\n  _s();\n  var _error$data;\n  let {\n    users\n  } = _ref;\n  // destructuring values from useAddNewNoteMutation\n  const [addNewNote, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewNoteMutation();\n\n  // navigate to redirect a user\n  const navigate = useNavigate();\n\n  // declaring state for inputs\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [userId, setUserId] = useState(users[0].id);\n  useEffect(() => {\n    if (isSuccess) {\n      // reset inputs state\n      setTitle(\"\");\n      setText(\"\");\n      setUserId(\"\");\n      // redirect to notes\n      navigate(\"/dash/notes\");\n    }\n  }, [isSuccess, navigate]);\n\n  // handle change functions for form inputs\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onTextChanged = e => setText(e.target.value);\n  const onUserIdChanged = e => setUserId(e.target.value);\n\n  // making sure all fields have values before allowing user to save button\n  const canSave = [title, text, userId].every(Boolean) && !isLoading;\n\n  // save handler\n  const onSaveNoteClicked = async e => {\n    e.preventDefault();\n    // checking if canSave is true\n    if (canSave) {\n      await addNewNote({\n        user: userId,\n        title,\n        text\n      });\n    }\n  };\n\n  // select options\n  const options = users.map(user => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: user.id,\n      children: user.username\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  });\n\n  // dynamic classes\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validTitleClass = !title ? \"form__input--incomplete\" : \"\";\n  const validTextClass = !text ? \"form__input--incomplete\" : \"\";\n\n  // declaring content variable to hold component jsx\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onSaveNoteClicked,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__title-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"New Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__action-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button\",\n              title: \"Save\",\n              disabled: !canSave,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form__input ${validTitleClass}`,\n          id: \"title\",\n          name: \"title\",\n          type: \"text\",\n          autoComplete: \"off\",\n          value: title,\n          onChange: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          htmlFor: \"text\",\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `form__input form__input--text ${validTextClass}`,\n          id: \"text\",\n          name: \"text\",\n          value: text,\n          onChange: onTextChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label form__checkbox-container\",\n          htmlFor: \"username\",\n          children: \"ASSIGNED TO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"username\",\n          name: \"username\",\n          className: \"form__select\",\n          value: userId,\n          onChange: onUserIdChanged,\n          children: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(NewNoteForm, \"Tx4BOaP/7ooVj1QFGiL3TAXfDt8=\", false, function () {\n  return [useAddNewNoteMutation, useNavigate];\n});\n_c = NewNoteForm;\nexport default NewNoteForm;\nvar _c;\n$RefreshReg$(_c, \"NewNoteForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useAddNewNoteMutation","FontAwesomeIcon","faSave","NewNoteForm","users","addNewNote","isLoading","isSuccess","isError","error","navigate","title","setTitle","text","setText","userId","setUserId","id","onTitleChanged","e","target","value","onTextChanged","onUserIdChanged","canSave","every","Boolean","onSaveNoteClicked","preventDefault","user","options","map","username","errClass","validTitleClass","validTextClass","content","data","message"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NewNoteForm.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddNewNoteMutation } from \"./notesApiSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NewNoteForm = ({ users }) => {\n  // destructuring values from useAddNewNoteMutation\n  const [addNewNote, { isLoading, isSuccess, isError, error }] =\n    useAddNewNoteMutation();\n\n  // navigate to redirect a user\n  const navigate = useNavigate();\n\n  // declaring state for inputs\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [userId, setUserId] = useState(users[0].id);\n\n  useEffect(() => {\n    if (isSuccess) {\n      // reset inputs state\n      setTitle(\"\");\n      setText(\"\");\n      setUserId(\"\");\n      // redirect to notes\n      navigate(\"/dash/notes\");\n    }\n  }, [isSuccess, navigate]);\n\n  // handle change functions for form inputs\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onTextChanged = (e) => setText(e.target.value);\n  const onUserIdChanged = (e) => setUserId(e.target.value);\n\n  // making sure all fields have values before allowing user to save button\n  const canSave = [title, text, userId].every(Boolean) && !isLoading;\n\n  // save handler\n  const onSaveNoteClicked = async (e) => {\n    e.preventDefault();\n    // checking if canSave is true\n    if (canSave) {\n      await addNewNote({ user: userId, title, text });\n    }\n  };\n\n  // select options\n  const options = users.map((user) => {\n    return (\n      <option key={user.id} value={user.id}>\n        {user.username}\n      </option>\n    );\n  });\n\n  // dynamic classes\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validTitleClass = !title ? \"form__input--incomplete\" : \"\";\n  const validTextClass = !text ? \"form__input--incomplete\" : \"\";\n\n  // declaring content variable to hold component jsx\n  const content = (\n    <>\n      <p className={errClass}>{error?.data?.message}</p>\n      <div className=\"form-wrapper\">\n        <form className=\"form\" onSubmit={onSaveNoteClicked}>\n          <div className=\"form__title-row\">\n            <h2>New Note</h2>\n            <div className=\"form__action-buttons\">\n              <button className=\"icon-button\" title=\"Save\" disabled={!canSave}>\n                <FontAwesomeIcon icon={faSave} />\n              </button>\n            </div>\n          </div>\n          <label className=\"form__label\" htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            className={`form__input ${validTitleClass}`}\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={onTitleChanged}\n          />\n\n          <label className=\"form__label\" htmlFor=\"text\">\n            Text:\n          </label>\n          <textarea\n            className={`form__input form__input--text ${validTextClass}`}\n            id=\"text\"\n            name=\"text\"\n            value={text}\n            onChange={onTextChanged}\n          />\n\n          <label\n            className=\"form__label form__checkbox-container\"\n            htmlFor=\"username\"\n          >\n            ASSIGNED TO:\n          </label>\n          <select\n            id=\"username\"\n            name=\"username\"\n            className=\"form__select\"\n            value={userId}\n            onChange={onUserIdChanged}\n          >\n            {options}\n          </select>\n        </form>\n      </div>\n    </>\n  );\n\n  return content;\n};\n\nexport default NewNoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}