{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/components/DashHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileCirclePlus, faFilePen, faUserGear, faUserPlus, faRightFromBracket } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport { useSendLogoutMutation } from \"../Features/auth/authApiSlice\";\nimport useAuth from \"../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\n// regex to compare location  in the url / verify current page so some elements can be displayed dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DASH_REGEX = /^\\/dash(\\/)?$/;\nconst NOTES_REGEX = /^\\/dash\\/notes(\\/)?$/;\nconst USERS_REGEX = /^\\/dash\\/users(\\/)?$/;\nconst DashHeader = () => {\n  _s();\n  var _error$data;\n  const {\n    username,\n    isManager,\n    isAdmin\n  } = useAuth();\n\n  // navigate for useNavigate()\n  const navigate = useNavigate();\n\n  // destructuring pathname from useLocation\n  const {\n    pathname\n  } = useLocation();\n\n  // getting sendLogout mutation from useSendLogoutMutation() and state values\n  const [sendLogout, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useSendLogoutMutation();\n  useEffect(() => {\n    // verifying if success and redirecting the user\n    if (isSuccess) navigate(\"/\");\n  }, [isSuccess, navigate]);\n\n  // Easy navigation handlers\n  const onNewNoteClicked = () => navigate(\"/dash/notes/new\");\n  const onNewUserClicked = () => navigate(\"/dash/users/new\");\n  const onNotesClicked = () => navigate(\"/dash/notes\");\n  const onUsersClicked = () => navigate(\"/dash/users\");\n\n  // css class to resize dash based on url path\n  let dashClass = null;\n  if (!DASH_REGEX.test(pathname) && !NOTES_REGEX.test(pathname) && !USERS_REGEX.test(pathname)) {\n    dashClass = \"dash-header__container--small\";\n  }\n\n  // new note button with onClick handler\n  let newNoteButton = null;\n  // checking url\n  if (NOTES_REGEX.test(pathname)) {\n    newNoteButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon-button\",\n      title: \"New Note\",\n      onClick: onNewNoteClicked,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFileCirclePlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  // new user button with onClick handler\n  let newUserButton = null;\n  // checking url\n  if (USERS_REGEX.test(pathname)) {\n    newUserButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon-button\",\n      title: \"New User\",\n      onClick: onNewUserClicked,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUserPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  // users list button with onClick handler\n  let userButton = null;\n  if (isManager || isAdmin) {\n    // checking url\n    if (!USERS_REGEX.test(pathname) && pathname.includes(\"/dash\")) {\n      userButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon-button\",\n        title: \"Users\",\n        onClick: onUsersClicked,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUserGear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  // notes list button with onClick handler\n  let notesButton = null;\n  // checking url\n  if (!NOTES_REGEX.test(pathname) && pathname.includes(\"/dash\")) {\n    notesButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon-button\",\n      title: \"Notes\",\n      onClick: onNotesClicked,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFilePen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n  // logout button with onClick handler\n  const logoutButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"icon-button\",\n    title: \"Logout\",\n    onClick: sendLogout,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faRightFromBracket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n\n  // error css classes\n  const errClass = isError ? \"errMsg\" : \"offscreen\";\n\n  // declaring a variable to hold all button content\n  let buttonContent;\n\n  // if loading\n  if (isLoading) {\n    buttonContent = /*#__PURE__*/_jsxDEV(PulseLoader, {\n      color: \"#FFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, this);\n  } else {\n    // buttons\n    buttonContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [newNoteButton, newUserButton, notesButton, userButton, logoutButton]\n    }, void 0, true);\n  }\n\n  // content to be displayed in DashHeader component\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dash-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dash\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dash-header__title\",\n          children: [\"gtech\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".COM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dash - header__container  ${dashClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"dash-header__nav\",\n          children: buttonContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(DashHeader, \"z722gJ7q/YOUrHX59ifXzmhHE7g=\", false, function () {\n  return [useAuth, useNavigate, useLocation, useSendLogoutMutation];\n});\n_c = DashHeader;\nexport default DashHeader;\nvar _c;\n$RefreshReg$(_c, \"DashHeader\");","map":{"version":3,"names":["useEffect","FontAwesomeIcon","faFileCirclePlus","faFilePen","faUserGear","faUserPlus","faRightFromBracket","useNavigate","Link","useLocation","useSendLogoutMutation","useAuth","PulseLoader","DASH_REGEX","NOTES_REGEX","USERS_REGEX","DashHeader","username","isManager","isAdmin","navigate","pathname","sendLogout","isLoading","isSuccess","isError","error","onNewNoteClicked","onNewUserClicked","onNotesClicked","onUsersClicked","dashClass","test","newNoteButton","newUserButton","userButton","includes","notesButton","logoutButton","errClass","buttonContent","content","data","message"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/components/DashHeader.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileCirclePlus,\n  faFilePen,\n  faUserGear,\n  faUserPlus,\n  faRightFromBracket,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport { useSendLogoutMutation } from \"../Features/auth/authApiSlice\";\nimport useAuth from \"../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\n// regex to compare location  in the url / verify current page so some elements can be displayed dynamically\nconst DASH_REGEX = /^\\/dash(\\/)?$/;\nconst NOTES_REGEX = /^\\/dash\\/notes(\\/)?$/;\nconst USERS_REGEX = /^\\/dash\\/users(\\/)?$/;\n\nconst DashHeader = () => {\n  const { username, isManager, isAdmin } = useAuth();\n\n  // navigate for useNavigate()\n  const navigate = useNavigate();\n\n  // destructuring pathname from useLocation\n  const { pathname } = useLocation();\n\n  // getting sendLogout mutation from useSendLogoutMutation() and state values\n  const [sendLogout, { isLoading, isSuccess, isError, error }] =\n    useSendLogoutMutation();\n\n  useEffect(() => {\n    // verifying if success and redirecting the user\n    if (isSuccess) navigate(\"/\");\n  }, [isSuccess, navigate]);\n\n  // Easy navigation handlers\n  const onNewNoteClicked = () => navigate(\"/dash/notes/new\");\n  const onNewUserClicked = () => navigate(\"/dash/users/new\");\n  const onNotesClicked = () => navigate(\"/dash/notes\");\n  const onUsersClicked = () => navigate(\"/dash/users\");\n\n  // css class to resize dash based on url path\n  let dashClass = null;\n  if (\n    !DASH_REGEX.test(pathname) &&\n    !NOTES_REGEX.test(pathname) &&\n    !USERS_REGEX.test(pathname)\n  ) {\n    dashClass = \"dash-header__container--small\";\n  }\n\n  // new note button with onClick handler\n  let newNoteButton = null;\n  // checking url\n  if (NOTES_REGEX.test(pathname)) {\n    newNoteButton = (\n      <button\n        className=\"icon-button\"\n        title=\"New Note\"\n        onClick={onNewNoteClicked}\n      >\n        <FontAwesomeIcon icon={faFileCirclePlus} />\n      </button>\n    );\n  }\n\n  // new user button with onClick handler\n  let newUserButton = null;\n  // checking url\n  if (USERS_REGEX.test(pathname)) {\n    newUserButton = (\n      <button\n        className=\"icon-button\"\n        title=\"New User\"\n        onClick={onNewUserClicked}\n      >\n        <FontAwesomeIcon icon={faUserPlus} />\n      </button>\n    );\n  }\n\n  // users list button with onClick handler\n  let userButton = null;\n  if (isManager || isAdmin) {\n    // checking url\n    if (!USERS_REGEX.test(pathname) && pathname.includes(\"/dash\")) {\n      userButton = (\n        <button className=\"icon-button\" title=\"Users\" onClick={onUsersClicked}>\n          <FontAwesomeIcon icon={faUserGear} />\n        </button>\n      );\n    }\n  }\n\n  // notes list button with onClick handler\n  let notesButton = null;\n  // checking url\n  if (!NOTES_REGEX.test(pathname) && pathname.includes(\"/dash\")) {\n    notesButton = (\n      <button className=\"icon-button\" title=\"Notes\" onClick={onNotesClicked}>\n        <FontAwesomeIcon icon={faFilePen} />\n      </button>\n    );\n  }\n\n  // logout button with onClick handler\n  const logoutButton = (\n    <button className=\"icon-button\" title=\"Logout\" onClick={sendLogout}>\n      <FontAwesomeIcon icon={faRightFromBracket} />\n    </button>\n  );\n\n  // error css classes\n  const errClass = isError ? \"errMsg\" : \"offscreen\";\n\n  // declaring a variable to hold all button content\n  let buttonContent;\n\n  // if loading\n  if (isLoading) {\n    buttonContent = <PulseLoader color={\"#FFF\"} />;\n  } else {\n    // buttons\n    buttonContent = (\n      <>\n        {newNoteButton}\n        {newUserButton}\n        {notesButton}\n        {userButton}\n        {logoutButton}\n      </>\n    );\n  }\n\n  // content to be displayed in DashHeader component\n  const content = (\n    <>\n      <p className={errClass}>{error?.data?.message}</p>\n      <header className=\"dash-header\">\n        <Link to=\"/dash\">\n          <h1 className=\"dash-header__title\">\n            gtech<span>.COM</span>\n          </h1>\n        </Link>\n        <div className={`dash - header__container  ${dashClass}`}>\n          <nav className=\"dash-header__nav\">{buttonContent}</nav>\n        </div>\n      </header>\n    </>\n  );\n\n  return content;\n};\n\nexport default DashHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}