{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/Note.jsx\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\nimport { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = _ref => {\n  _s();\n  let {\n    noteId\n  } = _ref;\n  // Declaring note variable using useGetNotesQuery and selecting from result\n  const {\n    note\n  } = useGetNotesQuery(\"notesList\", {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        note: data === null || data === void 0 ? void 0 : data.entities[noteId]\n      };\n    }\n  });\n\n  // navigate to redirect a user\n  const navigate = useNavigate();\n\n  // how time should be displayed\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\"\n    });\n    const updated = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\"\n    });\n\n    // onClick function to redirect to selected note by id\n    const handleEdit = () => navigate(`/dash/notes/${noteId}`);\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__status\",\n        children: note.completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__status--completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__status--open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__created\",\n        children: created\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__updated\",\n        children: updated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__title\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__username\",\n        children: note.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button table__button\",\n          onClick: handleEdit,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPenToSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else return null;\n};\n\n// using memo on the created Note so the component only rerender if their are changes in the data\n_s(Note, \"Fa5Rrj8re8cX2BwWOSgfJcqHzjQ=\", false, function () {\n  return [useGetNotesQuery, useNavigate];\n});\n_c = Note;\nconst memoizedNote = /*#__PURE__*/memo(Note);\nexport default memoizedNote;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["FontAwesomeIcon","faPenToSquare","useNavigate","useGetNotesQuery","memo","Note","noteId","note","selectFromResult","data","entities","navigate","created","Date","createdAt","toLocaleString","day","month","updated","handleEdit","completed","title","username","memoizedNote"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/Note.jsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\nimport { memo } from \"react\";\n\nconst Note = ({ noteId }) => {\n  // Declaring note variable using useGetNotesQuery and selecting from result\n  const { note } = useGetNotesQuery(\"notesList\", {\n    selectFromResult: ({ data }) => ({\n      note: data?.entities[noteId],\n    }),\n  });\n\n  // navigate to redirect a user\n  const navigate = useNavigate();\n\n  // how time should be displayed\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\",\n    });\n\n    const updated = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\",\n    });\n\n    // onClick function to redirect to selected note by id\n    const handleEdit = () => navigate(`/dash/notes/${noteId}`);\n\n    return (\n      <tr className=\"table__row\">\n        <td className=\"table__cell note__status\">\n          {note.completed ? (\n            <span className=\"note__status--completed\">Completed</span>\n          ) : (\n            <span className=\"note__status--open\">Open</span>\n          )}\n        </td>\n        <td className=\"table__cell note__created\">{created}</td>\n        <td className=\"table__cell note__updated\">{updated}</td>\n        <td className=\"table__cell note__title\">{note.title}</td>\n        <td className=\"table__cell note__username\">{note.username}</td>\n        <td className=\"table__cell\">\n          <button className=\"icon-button table__button\" onClick={handleEdit}>\n            <FontAwesomeIcon icon={faPenToSquare} />\n          </button>\n        </td>\n      </tr>\n    );\n  } else return null;\n};\n\n// using memo on the created Note so the component only rerender if their are changes in the data\nconst memoizedNote = memo(Note);\n\nexport default memoizedNote;\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,IAAI,QAAQ,OAAO;AAAC;AAE7B,MAAMC,IAAI,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGJ,gBAAgB,CAAC,WAAW,EAAE;IAC7CK,gBAAgB,EAAE;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAM;QAC/BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACJ,MAAM;MAC7B,CAAC;IAAA;EACH,CAAC,CAAC;;EAEF;EACA,MAAMK,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;EACA,IAAIK,IAAI,EAAE;IACR,MAAMK,OAAO,GAAG,IAAIC,IAAI,CAACN,IAAI,CAACO,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,IAAIL,IAAI,CAACN,IAAI,CAACO,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACA,MAAME,UAAU,GAAG,MAAMR,QAAQ,CAAE,eAAcL,MAAO,EAAC,CAAC;IAE1D,oBACE;MAAI,SAAS,EAAC,YAAY;MAAA,wBACxB;QAAI,SAAS,EAAC,0BAA0B;QAAA,UACrCC,IAAI,CAACa,SAAS,gBACb;UAAM,SAAS,EAAC,yBAAyB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,gBAE1D;UAAM,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MACrC;QAAA;QAAA;QAAA;MAAA,QACE,eACL;QAAI,SAAS,EAAC,2BAA2B;QAAA,UAAER;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACxD;QAAI,SAAS,EAAC,2BAA2B;QAAA,UAAEM;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACxD;QAAI,SAAS,EAAC,yBAAyB;QAAA,UAAEX,IAAI,CAACc;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACzD;QAAI,SAAS,EAAC,4BAA4B;QAAA,UAAEd,IAAI,CAACe;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/D;QAAI,SAAS,EAAC,aAAa;QAAA,uBACzB;UAAQ,SAAS,EAAC,2BAA2B;UAAC,OAAO,EAAEH,UAAW;UAAA,uBAChE,QAAC,eAAe;YAAC,IAAI,EAAElB;UAAc;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACjC;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAET,CAAC,MAAM,OAAO,IAAI;AACpB,CAAC;;AAED;AAAA,GAjDMI,IAAI;EAAA,QAESF,gBAAgB,EAOhBD,WAAW;AAAA;AAAA,KATxBG,IAAI;AAkDV,MAAMkB,YAAY,gBAAGnB,IAAI,CAACC,IAAI,CAAC;AAE/B,eAAekB,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}