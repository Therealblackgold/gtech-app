{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/users/UsersList.jsx\",\n  _s = $RefreshSig$();\nimport { useGetUsersQuery } from \"./usersApiSlice\";\nimport User from \"./User\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport useTitle from \"../../hooks/useTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = () => {\n  _s();\n  // using useTitle custom hook to set a page title\n  useTitle(\"gtech.COM: Users\");\n  const {\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetUsersQuery(\"usersList\", {\n    // refetch data every 1 minute if data is changed from another device\n    pollingInterval: 60000,\n    //if window focus is changed and then refocused refetch data\n    refetchOnFocus: true,\n    // refetch data on remount\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n\n  // if loading\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(PulseLoader, {\n    color: \"#FFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 28\n  }, this);\n\n  // if error\n  if (isError) {\n    var _error$data;\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n  // if success\n  if (isSuccess) {\n    const {\n      ids\n    } = users;\n\n    // mapping user data to User component and storing it in a variable tableContent\n    const tableContent = (ids === null || ids === void 0 ? void 0 : ids.length) && ids.map(userId => /*#__PURE__*/_jsxDEV(User, {\n      userId: userId\n    }, userId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 42\n    }, this));\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__roles\",\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n};\n_s(UsersList, \"GwpQWLTprSOU4Hbe0o4j+I4KfGY=\", false, function () {\n  return [useTitle, useGetUsersQuery];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["useGetUsersQuery","User","PulseLoader","useTitle","UsersList","data","users","isLoading","isSuccess","isError","error","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","content","message","ids","tableContent","length","map","userId"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/users/UsersList.jsx"],"sourcesContent":["import { useGetUsersQuery } from \"./usersApiSlice\";\nimport User from \"./User\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport useTitle from \"../../hooks/useTitle\";\n\nexport const UsersList = () => {\n  // using useTitle custom hook to set a page title\n  useTitle(\"gtech.COM: Users\");\n\n  const {\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetUsersQuery(\"usersList\", {\n    // refetch data every 1 minute if data is changed from another device\n    pollingInterval: 60000,\n    //if window focus is changed and then refocused refetch data\n    refetchOnFocus: true,\n    // refetch data on remount\n    refetchOnMountOrArgChange: true,\n  });\n\n  let content;\n\n  // if loading\n  if (isLoading) content = <PulseLoader color={\"#FFF\"} />;\n\n  // if error\n  if (isError) {\n    content = <p className=\"errmsg\">{error?.data?.message}</p>;\n  }\n\n  // if success\n  if (isSuccess) {\n    const { ids } = users;\n\n    // mapping user data to User component and storing it in a variable tableContent\n    const tableContent =\n      ids?.length && ids.map((userId) => <User key={userId} userId={userId} />);\n\n    content = (\n      <table className=\"table table--users\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th user__username\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th user__roles\">\n              Roles\n            </th>\n            <th scope=\"col\" className=\"table__th user__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n        <tbody>{tableContent}</tbody>\n      </table>\n    );\n  }\n\n  return content;\n};\nexport default UsersList;\n"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B;EACAD,QAAQ,CAAC,kBAAkB,CAAC;EAE5B,MAAM;IACJE,IAAI,EAAEC,KAAK;IACXC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC,GAAGV,gBAAgB,CAAC,WAAW,EAAE;IAChC;IACAW,eAAe,EAAE,KAAK;IACtB;IACAC,cAAc,EAAE,IAAI;IACpB;IACAC,yBAAyB,EAAE;EAC7B,CAAC,CAAC;EAEF,IAAIC,OAAO;;EAEX;EACA,IAAIP,SAAS,EAAEO,OAAO,gBAAG,QAAC,WAAW;IAAC,KAAK,EAAE;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;;EAEvD;EACA,IAAIL,OAAO,EAAE;IAAA;IACXK,OAAO,gBAAG;MAAG,SAAS,EAAC,QAAQ;MAAA,UAAEJ,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEL,IAAI,gDAAX,YAAaU;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC5D;;EAEA;EACA,IAAIP,SAAS,EAAE;IACb,MAAM;MAAEQ;IAAI,CAAC,GAAGV,KAAK;;IAErB;IACA,MAAMW,YAAY,GAChB,CAAAD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,MAAM,KAAIF,GAAG,CAACG,GAAG,CAAEC,MAAM,iBAAK,QAAC,IAAI;MAAc,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAoB,CAAC;IAE3EN,OAAO,gBACL;MAAO,SAAS,EAAC,oBAAoB;MAAA,wBACnC;QAAO,SAAS,EAAC,cAAc;QAAA,uBAC7B;UAAA,wBACE;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,0BAA0B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE/C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,uBAAuB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE5C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,sBAAsB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE3C;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAAQG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC;EACH;EAEA,OAAOH,OAAO;AAChB,CAAC;AAAC,GA1DWV,SAAS;EAAA,QAEpBD,QAAQ,EAQJH,gBAAgB;AAAA;AAAA,KAVTI,SAAS;AA2DtB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}