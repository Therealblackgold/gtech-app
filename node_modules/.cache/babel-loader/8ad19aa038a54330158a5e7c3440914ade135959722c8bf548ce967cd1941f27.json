{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/users/NewUserForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAddNewUserMutation } from \"./usersApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { ROLES } from \"../../config/roles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst NewUserForm = () => {\n  _s();\n  var _error$data;\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(false);\n  const [roles, setRoles] = useState([\"Employee\"]);\n\n  // validate username\n  useEffect(() => {\n    setValidUsername(USER_REGEX.text(username));\n  }, [username]);\n\n  // validate password\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.text(password));\n  }, [password]);\n\n  // reset form state\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setRoles([]);\n      navigate(\"/dash/users\");\n    }\n  }, [isSuccess, navigate]);\n\n  // onChange functions\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n  const onRolesChanged = e => {\n    // making an array of selected options\n    // storing the array as values\n    // so a user can have more than one role\n    const values = Array.from(e.target.selectedOptions, option => option.value);\n    setRoles(values);\n  };\n\n  // canSave function that checks all fields are completed\n  const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n\n  // onSaveUserClicked saves the user when clicked\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      // calling addNewUser mutation\n      await addNewUser({\n        username,\n        password,\n        roles\n      });\n    }\n  };\n  const options = Object.values(ROLES).map(role => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: role,\n      children: role\n    }, role, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Validation classes\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? \"form__input--incomplete\" : \"\";\n  const validPwdClass = !validPassword ? \"form__input--incomplete\" : \"\";\n  const validRolesClass = !Boolean(roles.length) ? \"form__input--incomplete\" : \"\";\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"form\",\n      onSubmit: onSaveUserClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__title-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__actions-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-button\",\n            title: \"Save\",\n            disabled: !canSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form__label\",\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[3-20 letters]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validUserClass}`,\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: onUsernameChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form__label\",\n        children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[6-12 chars incl. !@#$%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validPwdClass}`,\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: onPasswordChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form__label\",\n        children: \"ASSIGNED ROLES:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: `form__input ${validRolesClass}`,\n        name: \"roles\",\n        id: \"roles\",\n        multiple: true,\n        size: \"3\",\n        value: roles,\n        onChange: onRolesChanged,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(NewUserForm, \"7Yz/GA7uP94OM4zgyt+MAeItH2w=\", false, function () {\n  return [useAddNewUserMutation, useNavigate];\n});\n_c = NewUserForm;\nexport default NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["useState","useEffect","useAddNewUserMutation","useNavigate","FontAwesomeIcon","faSave","ROLES","USER_REGEX","PWD_REGEX","NewUserForm","addNewUser","isLoading","isSuccess","isError","error","navigate","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","roles","setRoles","text","onUsernameChanged","e","target","value","onPasswordChanged","onRolesChanged","values","Array","from","selectedOptions","option","canSave","length","every","Boolean","onSaveUserClicked","preventDefault","options","Object","map","role","errClass","validUserClass","validPwdClass","validRolesClass","content","data","message"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/users/NewUserForm.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAddNewUserMutation } from \"./usersApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { ROLES } from \"../../config/roles\";\n\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\n\nconst NewUserForm = () => {\n  const [addNewUser, { isLoading, isSuccess, isError, error }] =\n    useAddNewUserMutation();\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(false);\n  const [roles, setRoles] = useState([\"Employee\"]);\n\n  // validate username\n  useEffect(() => {\n    setValidUsername(USER_REGEX.text(username));\n  }, [username]);\n\n  // validate password\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.text(password));\n  }, [password]);\n\n  // reset form state\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setRoles([]);\n      navigate(\"/dash/users\");\n    }\n  }, [isSuccess, navigate]);\n\n  // onChange functions\n  const onUsernameChanged = (e) => setUsername(e.target.value);\n  const onPasswordChanged = (e) => setPassword(e.target.value);\n\n  const onRolesChanged = (e) => {\n    // making an array of selected options\n    // storing the array as values\n    // so a user can have more than one role\n    const values = Array.from(\n      e.target.selectedOptions,\n      (option) => option.value\n    );\n    setRoles(values);\n  };\n\n  // canSave function that checks all fields are completed\n  const canSave =\n    [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n\n  // onSaveUserClicked saves the user when clicked\n  const onSaveUserClicked = async (e) => {\n    e.preventDefault();\n    if (canSave) {\n      // calling addNewUser mutation\n      await addNewUser({ username, password, roles });\n    }\n  };\n\n  const options = Object.values(ROLES).map((role) => {\n    return (\n      <option key={role} value={role}>\n        {role}\n      </option>\n    );\n  });\n\n  // Validation classes\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? \"form__input--incomplete\" : \"\";\n  const validPwdClass = !validPassword ? \"form__input--incomplete\" : \"\";\n  const validRolesClass = !Boolean(roles.length)\n    ? \"form__input--incomplete\"\n    : \"\";\n\n  const content = (\n    <>\n      <p className={errClass}>{error?.data?.message}</p>\n      <form action=\"\" className=\"form\" onSubmit={onSaveUserClicked}>\n        <div className=\"form__title-row\">\n          <h2>New User</h2>\n          <div className=\"form__actions-buttons\">\n            <button className=\"icon-button\" title=\"Save\" disabled={!canSave}>\n              <FontAwesomeIcon icon={faSave} />\n            </button>\n          </div>\n        </div>\n        <label htmlFor=\"username\" className=\"form__label\">\n          Username: <span className=\"nowrap\">[3-20 letters]</span>\n        </label>\n        <input\n          className={`form__input ${validUserClass}`}\n          type=\"text\"\n          id=\"username\"\n          name=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={onUsernameChanged}\n        />\n        <label htmlFor=\"password\" className=\"form__label\">\n          Password: <span className=\"nowrap\">[6-12 chars incl. !@#$%]</span>\n        </label>\n        <input\n          className={`form__input ${validPwdClass}`}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onPasswordChanged}\n        />\n        <label htmlFor=\"password\" className=\"form__label\">\n          ASSIGNED ROLES:\n        </label>\n        <select\n          className={`form__input ${validRolesClass}`}\n          name=\"roles\"\n          id=\"roles\"\n          multiple={true}\n          size=\"3\"\n          value={roles}\n          onChange={onRolesChanged}\n        >\n          {options}\n        </select>\n      </form>\n    </>\n  );\n\n  return content;\n};\n\nexport default NewUserForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,KAAK,QAAQ,oBAAoB;AAAC;AAAA;AAE3C,MAAMC,UAAU,GAAG,eAAe;AAClC,MAAMC,SAAS,GAAG,uBAAuB;AAEzC,MAAMC,WAAW,GAAG,MAAM;EAAA;EAAA;EACxB,MAAM,CAACC,UAAU,EAAE;IAAEC,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAC1DZ,qBAAqB,EAAE;EAEzB,MAAMa,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdkB,gBAAgB,CAACZ,UAAU,CAACmB,IAAI,CAACV,QAAQ,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAf,SAAS,CAAC,MAAM;IACdsB,gBAAgB,CAACf,SAAS,CAACkB,IAAI,CAACN,QAAQ,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,EAAE;MACbK,WAAW,CAAC,EAAE,CAAC;MACfI,WAAW,CAAC,EAAE,CAAC;MACfI,QAAQ,CAAC,EAAE,CAAC;MACZV,QAAQ,CAAC,aAAa,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,SAAS,EAAEG,QAAQ,CAAC,CAAC;;EAEzB;EACA,MAAMY,iBAAiB,GAAIC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5D,MAAMC,iBAAiB,GAAIH,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE5D,MAAME,cAAc,GAAIJ,CAAC,IAAK;IAC5B;IACA;IACA;IACA,MAAMK,MAAM,GAAGC,KAAK,CAACC,IAAI,CACvBP,CAAC,CAACC,MAAM,CAACO,eAAe,EACvBC,MAAM,IAAKA,MAAM,CAACP,KAAK,CACzB;IACDL,QAAQ,CAACQ,MAAM,CAAC;EAClB,CAAC;;EAED;EACA,MAAMK,OAAO,GACX,CAACd,KAAK,CAACe,MAAM,EAAErB,aAAa,EAAEI,aAAa,CAAC,CAACkB,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC9B,SAAS;;EAE3E;EACA,MAAM+B,iBAAiB,GAAG,MAAOd,CAAC,IAAK;IACrCA,CAAC,CAACe,cAAc,EAAE;IAClB,IAAIL,OAAO,EAAE;MACX;MACA,MAAM5B,UAAU,CAAC;QAAEM,QAAQ;QAAEI,QAAQ;QAAEI;MAAM,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMoB,OAAO,GAAGC,MAAM,CAACZ,MAAM,CAAC3B,KAAK,CAAC,CAACwC,GAAG,CAAEC,IAAI,IAAK;IACjD,oBACE;MAAmB,KAAK,EAAEA,IAAK;MAAA,UAC5BA;IAAI,GADMA,IAAI;MAAA;MAAA;MAAA;IAAA,QAER;EAEb,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAGnC,OAAO,GAAG,QAAQ,GAAG,WAAW;EACjD,MAAMoC,cAAc,GAAG,CAAC/B,aAAa,GAAG,yBAAyB,GAAG,EAAE;EACtE,MAAMgC,aAAa,GAAG,CAAC5B,aAAa,GAAG,yBAAyB,GAAG,EAAE;EACrE,MAAM6B,eAAe,GAAG,CAACV,OAAO,CAACjB,KAAK,CAACe,MAAM,CAAC,GAC1C,yBAAyB,GACzB,EAAE;EAEN,MAAMa,OAAO,gBACX;IAAA,wBACE;MAAG,SAAS,EAAEJ,QAAS;MAAA,UAAElC,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEuC,IAAI,gDAAX,YAAaC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAClD;MAAM,MAAM,EAAC,EAAE;MAAC,SAAS,EAAC,MAAM;MAAC,QAAQ,EAAEZ,iBAAkB;MAAA,wBAC3D;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACjB;UAAK,SAAS,EAAC,uBAAuB;UAAA,uBACpC;YAAQ,SAAS,EAAC,aAAa;YAAC,KAAK,EAAC,MAAM;YAAC,QAAQ,EAAE,CAACJ,OAAQ;YAAA,uBAC9D,QAAC,eAAe;cAAC,IAAI,EAAEjC;YAAO;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QAC1B;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAO,OAAO,EAAC,UAAU;QAAC,SAAS,EAAC,aAAa;QAAA,sCACrC;UAAM,SAAS,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA;QAAA;QAAA;QAAA;MAAA,QAClD,eACR;QACE,SAAS,EAAG,eAAc4C,cAAe,EAAE;QAC3C,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,UAAU;QACf,YAAY,EAAC,KAAK;QAClB,KAAK,EAAEjC,QAAS;QAChB,QAAQ,EAAEW;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF;QAAO,OAAO,EAAC,UAAU;QAAC,SAAS,EAAC,aAAa;QAAA,sCACrC;UAAM,SAAS,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgC;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,eACR;QACE,SAAS,EAAG,eAAcuB,aAAc,EAAE;QAC1C,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,UAAU;QACf,KAAK,EAAE9B,QAAS;QAChB,QAAQ,EAAEW;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF;QAAO,OAAO,EAAC,UAAU;QAAC,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEzC,eACR;QACE,SAAS,EAAG,eAAcoB,eAAgB,EAAE;QAC5C,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,QAAQ,EAAE,IAAK;QACf,IAAI,EAAC,GAAG;QACR,KAAK,EAAE3B,KAAM;QACb,QAAQ,EAAEQ,cAAe;QAAA,UAExBY;MAAO;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBAEV;EAED,OAAOQ,OAAO;AAChB,CAAC;AAAC,GAjII3C,WAAW;EAAA,QAEbP,qBAAqB,EAENC,WAAW;AAAA;AAAA,KAJxBM,WAAW;AAmIjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}