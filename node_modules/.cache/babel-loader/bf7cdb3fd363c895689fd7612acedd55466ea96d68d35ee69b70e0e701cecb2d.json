{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// creating a baseQuery and setting headers\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"http://localhost:3100\",\n  credentials: \"include\",\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const token = getState().auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nexport const apiSlice = createApi({\n  baseQuery,\n  tagTypes: [\"Note\", \"User\"],\n  endpoints: builder => ({})\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","credentials","prepareHeaders","headers","getState","token","auth","set","apiSlice","tagTypes","endpoints","builder"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/app/api/apiSlice.jsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// creating a baseQuery and setting headers\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"http://localhost:3100\",\n  credentials: \"include\",\n  prepareHeaders: (headers, { getState }) => {\n    const token = getState().auth.token;\n\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  },\n});\n\nexport const apiSlice = createApi({\n  baseQuery,\n  tagTypes: [\"Note\", \"User\"],\n  endpoints: (builder) => ({}),\n});\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,MAAMC,SAAS,GAAGD,cAAc,CAAC;EAC/BE,OAAO,EAAE,uBAAuB;EAChCC,WAAW,EAAE,SAAS;EACtBC,cAAc,EAAE,CAACC,OAAO,WAAmB;IAAA,IAAjB;MAAEC;IAAS,CAAC;IACpC,MAAMC,KAAK,GAAGD,QAAQ,EAAE,CAACE,IAAI,CAACD,KAAK;IAEnC,IAAIA,KAAK,EAAE;MACTF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAG,UAASF,KAAM,EAAC,CAAC;IACjD;IACA,OAAOF,OAAO;EAChB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,QAAQ,GAAGX,SAAS,CAAC;EAChCE,SAAS;EACTU,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1BC,SAAS,EAAGC,OAAO,KAAM,CAAC,CAAC;AAC7B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}