{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/EditNote.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { selectNoteById, useGetNotesQuery } from \"./notesApiSlice\";\nimport { selectAllUsers, useGetUsersQuery } from \"../users/usersApiSlice\";\nimport EditNoteForm from \"./EditNoteForm\";\nimport useAuth from \"../../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditNote = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    username,\n    isManager,\n    isAdmin\n  } = useAuth;\n\n  // getting notes from useGetNotesQuery\n  const {\n    note\n  } = useGetNotesQuery(\"notesList\", {\n    selectFromResult: _ref => {\n      let {\n        data\n      } = _ref;\n      return {\n        note: data === null || data === void 0 ? void 0 : data.entities[id]\n      };\n    }\n  });\n\n  // getting users from useGetUsersQuery\n  const {\n    users\n  } = useGetUsersQuery(\"usersList\", {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        users: data === null || data === void 0 ? void 0 : data.ids.map(id => data === null || data === void 0 ? void 0 : data.entities[id])\n      };\n    }\n  });\n\n  // Loading state\n  if (!note || !(users !== null && users !== void 0 && users.length)) return /*#__PURE__*/_jsxDEV(PulseLoader, {\n    color: \"#FFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 39\n  }, this);\n\n  // check if user has access\n  if (!isManager && !isAdmin) {\n    if (note.username !== username) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errmsg\",\n        children: \"No access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  const content = /*#__PURE__*/_jsxDEV(EditNoteForm, {\n    note: note,\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }, this);\n  return content;\n};\n_s(EditNote, \"NbWvZ2Gt3fRP2iNv5qu3lFH1/Jc=\", false, function () {\n  return [useParams, useGetNotesQuery, useGetUsersQuery];\n});\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["useParams","selectNoteById","useGetNotesQuery","selectAllUsers","useGetUsersQuery","EditNoteForm","useAuth","PulseLoader","EditNote","id","username","isManager","isAdmin","note","selectFromResult","data","entities","users","ids","map","length","content"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/EditNote.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { selectNoteById, useGetNotesQuery } from \"./notesApiSlice\";\nimport { selectAllUsers, useGetUsersQuery } from \"../users/usersApiSlice\";\nimport EditNoteForm from \"./EditNoteForm\";\nimport useAuth from \"../../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst EditNote = () => {\n  const { id } = useParams();\n\n  const { username, isManager, isAdmin } = useAuth;\n\n  // getting notes from useGetNotesQuery\n  const { note } = useGetNotesQuery(\"notesList\", {\n    selectFromResult: ({ data }) => ({\n      note: data?.entities[id],\n    }),\n  });\n\n  // getting users from useGetUsersQuery\n  const { users } = useGetUsersQuery(\"usersList\", {\n    selectFromResult: ({ data }) => ({\n      users: data?.ids.map((id) => data?.entities[id]),\n    }),\n  });\n\n  // Loading state\n  if (!note || !users?.length) return <PulseLoader color={\"#FFF\"} />;\n\n  // check if user has access\n  if (!isManager && !isAdmin) {\n    if (note.username !== username) {\n      return <p className=\"errmsg\">No access</p>;\n    }\n  }\n\n  const content = <EditNoteForm note={note} users={users} />;\n\n  return content;\n};\n\nexport default EditNote;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,iBAAiB;AAClE,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,wBAAwB;AACzE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,WAAW,MAAM,4BAA4B;AAAC;AAErD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAE1B,MAAM;IAAEU,QAAQ;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGN,OAAO;;EAEhD;EACA,MAAM;IAAEO;EAAK,CAAC,GAAGX,gBAAgB,CAAC,WAAW,EAAE;IAC7CY,gBAAgB,EAAE;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAM;QAC/BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACP,EAAE;MACzB,CAAC;IAAA;EACH,CAAC,CAAC;;EAEF;EACA,MAAM;IAAEQ;EAAM,CAAC,GAAGb,gBAAgB,CAAC,WAAW,EAAE;IAC9CU,gBAAgB,EAAE;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAM;QAC/BE,KAAK,EAAEF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,GAAG,CAACC,GAAG,CAAEV,EAAE,IAAKM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACP,EAAE,CAAC;MACjD,CAAC;IAAA;EACH,CAAC,CAAC;;EAEF;EACA,IAAI,CAACI,IAAI,IAAI,EAACI,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEG,MAAM,GAAE,oBAAO,QAAC,WAAW;IAAC,KAAK,EAAE;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;;EAElE;EACA,IAAI,CAACT,SAAS,IAAI,CAACC,OAAO,EAAE;IAC1B,IAAIC,IAAI,CAACH,QAAQ,KAAKA,QAAQ,EAAE;MAC9B,oBAAO;QAAG,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAC5C;EACF;EAEA,MAAMW,OAAO,gBAAG,QAAC,YAAY;IAAC,IAAI,EAAER,IAAK;IAAC,KAAK,EAAEI;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;EAE1D,OAAOI,OAAO;AAChB,CAAC;AAAC,GAhCIb,QAAQ;EAAA,QACGR,SAAS,EAKPE,gBAAgB,EAOfE,gBAAgB;AAAA;AAAA,KAb9BI,QAAQ;AAkCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}