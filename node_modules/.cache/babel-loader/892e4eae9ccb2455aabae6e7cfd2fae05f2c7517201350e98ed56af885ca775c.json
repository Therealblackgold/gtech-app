{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NotesList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const {\n    data: notes,\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetNotesQuery();\n  let content;\n\n  // Loading state\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 28\n  }, this);\n\n  // Error state\n  if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : error.data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }, this);\n  }\n\n  // Success state\n  if (isSuccess) {\n    // using data:users that was renamed in useGetUserQuery\n    const {\n      ids\n    } = users;\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(userId => /*#__PURE__*/_jsxDEV(User, {\n      userId: userId\n    }, userId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__roles\",\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n};\n_s(NotesList, \"ZpYD1NdJ6OfNjOtvLYdGrwibzPs=\", false, function () {\n  return [useGetNotesQuery];\n});\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useGetNotesQuery","NotesList","data","notes","users","isLoading","isSuccess","isError","error","content","message","ids","tableContent","length","map","userId"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NotesList.jsx"],"sourcesContent":["import React from \"react\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\n\nconst NotesList = () => {\n  const {\n    data: notes,\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetNotesQuery();\n\n  let content;\n\n  // Loading state\n  if (isLoading) content = <p>Loading...</p>;\n\n  // Error state\n  if (isError) {\n    content = <p className=\"errmsg\">{error?.data.message}</p>;\n  }\n\n  // Success state\n  if (isSuccess) {\n    // using data:users that was renamed in useGetUserQuery\n    const { ids } = users;\n\n    const tableContent = ids?.length\n      ? ids.map((userId) => <User key={userId} userId={userId} />)\n      : null;\n\n    content = (\n      <table className=\"table table--users\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th user__username\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th user__roles\">\n              Roles\n            </th>\n            <th scope=\"col\" className=\"table__th user__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n        <tbody>{tableContent}</tbody>\n      </table>\n    );\n  }\n\n  return content;\n};\n\nexport default NotesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC;AAEnD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM;IACJC,IAAI,EAAEC,KAAK;IACXD,IAAI,EAAEE,KAAK;IACXC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC,GAAGR,gBAAgB,EAAE;EAEtB,IAAIS,OAAO;;EAEX;EACA,IAAIJ,SAAS,EAAEI,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;;EAE1C;EACA,IAAIF,OAAO,EAAE;IACXE,OAAO,gBAAG;MAAG,SAAS,EAAC,QAAQ;MAAA,UAAED,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEN,IAAI,CAACQ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC3D;;EAEA;EACA,IAAIJ,SAAS,EAAE;IACb;IACA,MAAM;MAAEK;IAAI,CAAC,GAAGP,KAAK;IAErB,MAAMQ,YAAY,GAAGD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEE,MAAM,GAC5BF,GAAG,CAACG,GAAG,CAAEC,MAAM,iBAAK,QAAC,IAAI;MAAc,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAoB,CAAC,GAC1D,IAAI;IAERN,OAAO,gBACL;MAAO,SAAS,EAAC,oBAAoB;MAAA,wBACnC;QAAO,SAAS,EAAC,cAAc;QAAA,uBAC7B;UAAA,wBACE;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,0BAA0B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE/C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,uBAAuB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE5C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,sBAAsB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE3C;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAAQG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC;EACH;EAEA,OAAOH,OAAO;AAChB,CAAC;AAAC,GAlDIR,SAAS;EAAA,QAQTD,gBAAgB;AAAA;AAAA,KARhBC,SAAS;AAoDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}