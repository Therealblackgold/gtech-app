{"ast":null,"code":"var _jsxFileName = \"/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NotesList.jsx\",\n  _s = $RefreshSig$();\nimport useAuth from \"../../hooks/useAuth\";\nimport Note from \"./Note\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const {\n    username,\n    isManager,\n    isAdmin\n  } = useAuth();\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetNotesQuery(\"notesList\", {\n    /*These added fields refetch data so \n    the user is always looking at fresh data \n    if any changes are made on another device  \n    pollingInterval: 15000 = every 15 seconds\n    refetchOnfocus = when focus is on another window and come back to the app,\n    refetchOnMountOrArgChange = fetching data on re mount */\n    pollingInterval: 15000,\n    refetchOnfocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n\n  // Loading state\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 28\n  }, this);\n\n  // Error state\n  if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : error.data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this);\n  }\n\n  // Success state\n  if (isSuccess) {\n    // using data:notes that was renamed in useGetNoteQuery\n    const {\n      ids,\n      entities\n    } = notes;\n    let filteredIds;\n    if (isManager || isAdmin) {\n      filteredIds = [...ids];\n    } else {\n      filteredIds = ids.filter(noteId => entities[noteId].username === username);\n    }\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(noteId => /*#__PURE__*/_jsxDEV(Note, {\n      noteId: noteId\n    }, noteId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__status\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__created\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__updated\",\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__title\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__username\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n};\n_s(NotesList, \"/r9jSuggU7Ehg3G2te4YQOtZLAw=\", false, function () {\n  return [useAuth, useGetNotesQuery];\n});\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["useAuth","Note","useGetNotesQuery","NotesList","username","isManager","isAdmin","data","notes","isLoading","isSuccess","isError","error","pollingInterval","refetchOnfocus","refetchOnMountOrArgChange","content","message","ids","entities","filteredIds","filter","noteId","tableContent","length","map"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/NotesList.jsx"],"sourcesContent":["import useAuth from \"../../hooks/useAuth\";\nimport Note from \"./Note\";\nimport { useGetNotesQuery } from \"./notesApiSlice\";\n\nconst NotesList = () => {\n  const { username, isManager, isAdmin } = useAuth();\n\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetNotesQuery(\"notesList\", {\n    /*These added fields refetch data so \n    the user is always looking at fresh data \n    if any changes are made on another device  \n    pollingInterval: 15000 = every 15 seconds\n    refetchOnfocus = when focus is on another window and come back to the app,\n    refetchOnMountOrArgChange = fetching data on re mount */\n    pollingInterval: 15000,\n    refetchOnfocus: true,\n    refetchOnMountOrArgChange: true,\n  });\n\n  let content;\n\n  // Loading state\n  if (isLoading) content = <p>Loading...</p>;\n\n  // Error state\n  if (isError) {\n    content = <p className=\"errmsg\">{error?.data.message}</p>;\n  }\n\n  // Success state\n  if (isSuccess) {\n    // using data:notes that was renamed in useGetNoteQuery\n    const { ids, entities } = notes;\n\n    let filteredIds;\n    if (isManager || isAdmin) {\n      filteredIds = [...ids];\n    } else {\n      filteredIds = ids.filter(\n        (noteId) => entities[noteId].username === username\n      );\n    }\n\n    const tableContent = ids?.length\n      ? ids.map((noteId) => <Note key={noteId} noteId={noteId} />)\n      : null;\n\n    content = (\n      <table className=\"table table--notes\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th note__status\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th note__created\">\n              Created\n            </th>\n            <th scope=\"col\" className=\"table__th note__updated\">\n              Updated\n            </th>\n            <th scope=\"col\" className=\"table__th note__title\">\n              title\n            </th>\n            <th scope=\"col\" className=\"table__th note__username\">\n              Owner\n            </th>\n            <th scope=\"col\" className=\"table__th note__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n        <tbody>{tableContent}</tbody>\n      </table>\n    );\n  }\n\n  return content;\n};\n\nexport default NotesList;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,qBAAqB;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC;AAEnD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGN,OAAO,EAAE;EAElD,MAAM;IACJO,IAAI,EAAEC,KAAK;IACXC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC,GAAGV,gBAAgB,CAAC,WAAW,EAAE;IAChC;AACJ;AACA;AACA;AACA;AACA;IACIW,eAAe,EAAE,KAAK;IACtBC,cAAc,EAAE,IAAI;IACpBC,yBAAyB,EAAE;EAC7B,CAAC,CAAC;EAEF,IAAIC,OAAO;;EAEX;EACA,IAAIP,SAAS,EAAEO,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;;EAE1C;EACA,IAAIL,OAAO,EAAE;IACXK,OAAO,gBAAG;MAAG,SAAS,EAAC,QAAQ;MAAA,UAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEL,IAAI,CAACU;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC3D;;EAEA;EACA,IAAIP,SAAS,EAAE;IACb;IACA,MAAM;MAAEQ,GAAG;MAAEC;IAAS,CAAC,GAAGX,KAAK;IAE/B,IAAIY,WAAW;IACf,IAAIf,SAAS,IAAIC,OAAO,EAAE;MACxBc,WAAW,GAAG,CAAC,GAAGF,GAAG,CAAC;IACxB,CAAC,MAAM;MACLE,WAAW,GAAGF,GAAG,CAACG,MAAM,CACrBC,MAAM,IAAKH,QAAQ,CAACG,MAAM,CAAC,CAAClB,QAAQ,KAAKA,QAAQ,CACnD;IACH;IAEA,MAAMmB,YAAY,GAAGL,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEM,MAAM,GAC5BN,GAAG,CAACO,GAAG,CAAEH,MAAM,iBAAK,QAAC,IAAI;MAAc,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAoB,CAAC,GAC1D,IAAI;IAERN,OAAO,gBACL;MAAO,SAAS,EAAC,oBAAoB;MAAA,wBACnC;QAAO,SAAS,EAAC,cAAc;QAAA,uBAC7B;UAAA,wBACE;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,wBAAwB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE7C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,yBAAyB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE9C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,yBAAyB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE9C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,uBAAuB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE5C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,0BAA0B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE/C,eACL;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,sBAAsB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE3C;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAAQO;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC;EACH;EAEA,OAAOP,OAAO;AAChB,CAAC;AAAC,GA/EIb,SAAS;EAAA,QAC4BH,OAAO,EAQ5CE,gBAAgB;AAAA;AAAA,KAThBC,SAAS;AAiFf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}