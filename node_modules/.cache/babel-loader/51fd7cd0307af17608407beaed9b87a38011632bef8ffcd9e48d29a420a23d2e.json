{"ast":null,"code":"var _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectNoteById } from \"./notesApiSlice\";\nconst Note = _ref => {\n  _s();\n  let {\n    noteId\n  } = _ref;\n  // Declaring user variable using selectUserById and passing the state and userId\n  const note = useSelector(state => selectNoteById(state, noteId));\n\n  // Declaring navigate to redirect\n  const navigate = useNavigate();\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\"\n    });\n    const updated = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\"\n    });\n    const handleEdit = () => navigate(`/dash/users/${noteId}`);\n  } else return null;\n};\n_s(Note, \"zcWD5t0qe+IRHQhPEltoPcFmmh4=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["FontAwesomeIcon","faPenToSquare","useNavigate","useSelector","selectNoteById","Note","noteId","note","state","navigate","created","Date","createdAt","toLocaleString","day","month","updated","handleEdit"],"sources":["/home/sidekicksgold/sidekicks/React/daveGray-mern/client/src/Features/notes/Note.jsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectNoteById } from \"./notesApiSlice\";\n\nconst Note = ({ noteId }) => {\n  // Declaring user variable using selectUserById and passing the state and userId\n  const note = useSelector((state) => selectNoteById(state, noteId));\n\n  // Declaring navigate to redirect\n  const navigate = useNavigate();\n\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\",\n    });\n    const updated = new Date(note.createdAt).toLocaleString(\"en-ZA\", {\n      day: \"numeric\",\n      month: \"long\",\n    });\n\n    const handleEdit = () => navigate(`/dash/users/${noteId}`);\n  } else return null;\n};\nexport default Note;\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,MAAMC,IAAI,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB;EACA,MAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAK,IAAKJ,cAAc,CAACI,KAAK,EAAEF,MAAM,CAAC,CAAC;;EAElE;EACA,MAAMG,QAAQ,GAAGP,WAAW,EAAE;EAE9B,IAAIK,IAAI,EAAE;IACR,MAAMG,OAAO,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAMC,OAAO,GAAG,IAAIL,IAAI,CAACJ,IAAI,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAME,UAAU,GAAG,MAAMR,QAAQ,CAAE,eAAcH,MAAO,EAAC,CAAC;EAC5D,CAAC,MAAM,OAAO,IAAI;AACpB,CAAC;AAAC,GAnBID,IAAI;EAAA,QAEKF,WAAW,EAGPD,WAAW;AAAA;AAAA,KALxBG,IAAI;AAoBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}